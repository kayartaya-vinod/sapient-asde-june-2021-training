server:
    port: ${PORT:8095}

spring:
    application:
        name: auth-service
    kafka:
        producer:
            bootstrap-servers: "${KAFKA_URL:localhost}:${KAFKA_PORT:9092}"
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    data:
        mongodb:
            database: ${DB_NAME:mycarsolution}
            username: admin
            password: Welcome#123
            host: ${DB_URL:54.234.219.42}
            port: ${DB_PORT:27017}

eureka:
    client:
        fetchRegistry: true
        registerWithEureka: true
        serviceUrl:
            defaultZone: http://${EUREKA_URL:localhost}:${EUREKA_PORT:8761}/eureka/
    instance:
        hostname: ${EUREKA_URL:localhost}
        prefer-ip-address: true



management:
    metrics:
        tags:
            application: auth-service

    endpoint:
        health:
            show-details: always

    endpoints:
        web:
            exposure:
                include: '*'
            base-path: /api/auth/metrics


opentracing:
    jaeger:
        service-name: Jaeger-AuthService
        enabled: true
        udp-sender:
            host: ${JAEGER_HOST:localhost}
            port: ${JAEGER_PORT:6831}

emailSendEmail: http://${EMAIL_SEND_URL:localhost}:${EMAIL_PORT:8090}/api/mail
kafkaEmailTopic: ${KAFKA_TOPIC:send-email}
cipherKey: E)H@McQfTjWnZr4u
cipherIv: /B?E(H+MbQeThWmY